AWSTemplateFormatVersion: '2010-09-09'
Description: 'ElastiCache Redis'

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'ElastiCache Parameters'
      Parameters:
      - EngineVersion
      - CacheNodeType
      - TransitEncryption
      - AuthToken
      - VpcId
      - ECSubnets
      - SourceAllow2AccessRedis

Parameters:

  VpcId:
    Description: The VPC of the worker instances
    Type: AWS::EC2::VPC::Id

  ECSubnets:
    Description: Select 2 subnets where ElastiCache can be created.
    Type: List<AWS::EC2::Subnet::Id>

  SourceAllow2AccessRedis:
    Description: Source SG Allow 2 Access ElastiCache Redis.
    Type: String
    Default: 'sg-xxxxxx'

  # NetworkStackName:
  #   Description: >-
  #     Name of an active CloudFormation stack that contains the networking
  #     resources, such as the VPC and subnet that will be used in this stack.
  #   Type: String
  #   MinLength: 1
  #   MaxLength: 255
  #   AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
  #   Default: test-vpc

  EngineVersion:
    Description: 'Redis version'
    Type: String
    Default: '5.0.0'
    AllowedValues: # aws elasticache describe-cache-engine-versions --engine redis --query "CacheEngineVersions[].EngineVersion"
    - '5.0.4'
    - '5.0.0'
    - '4.0.10'
    - '3.2.6' # 3.2.4 and 3.2.10 do not support encryption

  CacheNodeType:
    Description: 'The compute and memory capacity of the nodes in the node group (shard).'
    Type: 'String'
    Default: 'cache.t2.micro'
    
  TransitEncryption:
    Description: 'Enable encryption for data in transit? When transit encryption is enabled also specify an auth token.'
    Type: 'String'
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'

  AuthToken:
    Description: 'Password (16 to 128 characters) used to authenticate against Redis. Requried when TransitEncryption = true. Leave blank to disable password-protection.'
    Type: 'String'
    Default: ''
    MaxLength: 128

Mappings:
  EngineVersionMap:
    '3.2.6':
      CacheParameterGroupFamily: 'redis3.2'
    '4.0.10':
      CacheParameterGroupFamily: 'redis4.0'
    '5.0.0':
      CacheParameterGroupFamily: 'redis5.0'
    '5.0.4':
      CacheParameterGroupFamily: 'redis5.0'

Conditions:
  HasAuthToken: !Not [!Equals [!Ref AuthToken, '']]


######################
# Resources section
######################

Resources:

  CacheParameterGroup:
    Type: 'AWS::ElastiCache::ParameterGroup'
    Properties:
      CacheParameterGroupFamily: !FindInMap [EngineVersionMap, !Ref EngineVersion, CacheParameterGroupFamily]
      Description: !Ref 'AWS::StackName'
      Properties: {}

  CacheSubnetGroupName:
    Type: 'AWS::ElastiCache::SubnetGroup'
    Properties:
      Description: !Ref 'AWS::StackName'
      SubnetIds: !Ref ECSubnets
      # SubnetIds: !Split
      # - ','
      # - 'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetsPrivate'

  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Ref 'AWS::StackName'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 6379
        ToPort: 6379
        SourceSecurityGroupId: !Ref SourceAllow2AccessRedis

  ReplicationGroup:
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupDescription: !Ref 'AWS::StackName'
      AtRestEncryptionEnabled: true
      AuthToken: !If [HasAuthToken, !Ref AuthToken, !Ref 'AWS::NoValue']
      AutomaticFailoverEnabled: true
      CacheNodeType: !Ref CacheNodeType
      CacheParameterGroupName: !Ref CacheParameterGroup
      CacheSubnetGroupName: !Ref CacheSubnetGroupName
      Engine: redis
      EngineVersion: !Ref EngineVersion
      NumNodeGroups: 1
      ReplicasPerNodeGroup: 1
      PreferredMaintenanceWindow: 'sat:07:00-sat:08:00'
      SecurityGroupIds:
      - !Ref SecurityGroup
      SnapshotRetentionLimit: 35
      SnapshotWindow: '00:00-03:00'
      TransitEncryptionEnabled: !Ref TransitEncryption

######################
# Outputs section
######################

Outputs:
  
  ClusterName:
    Description: 'The name of the cluster'
    Value: !Ref ReplicationGroup
    Export:
      Name: !Sub '${AWS::StackName}-ClusterName'
  
  PrimaryEndPointAddress:
    Description: 'The DNS address of the primary read-write cache node.'
    Value: !GetAtt 'ReplicationGroup.PrimaryEndPoint.Address'
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryEndPointAddress'
  
  PrimaryEndPointPort:
    Description: 'The port that the primary read-write cache engine is listening on.'
    Value: !GetAtt 'ReplicationGroup.PrimaryEndPoint.Port'
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryEndPointPort'
