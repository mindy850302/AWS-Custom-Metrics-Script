AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Network Template: RDS with MySQL engine

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'RDS Parameters'
      Parameters:
      - DBSnapshotIdentifier
      - EngineVersion
      - DBAllocatedStorage
      - DBInstanceClass
      - DBName
      - DBBackupRetentionPeriod
      - DBMasterUsername
      - DBMasterUserPassword
      - DBMultiAZ
      - PreferredBackupWindow
      - PreferredMaintenanceWindow

Parameters:

  NetworkStackName:
    Description: >-
      Name of an active CloudFormation stack that contains the networking
      resources, such as the VPC and subnet that will be used in this stack.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: test-vpc

  # ParentAlertStack:
  #   Description: 'Optional but recommended stack name of parent alert stack based on operations/alert.yaml template.'
  #   Type: String
  #   Default: ''

  DBSnapshotIdentifier:
    Description: 'Optional name or Amazon Resource Name (ARN) of the DB snapshot from which you want to restore (leave blank to create an empty database).'
    Type: String
    Default: ''

  DBAllocatedStorage:
    Description: 'The allocated storage size, specified in GB (ignored when DBSnapshotIdentifier is set, value used from snapshot).'
    Type: Number
    Default: 5
    MinValue: 5
    MaxValue: 16384

  DBInstanceClass:
    Description: 'The instance type of database server.'
    Type: String
    Default: 'db.t2.micro'

  DBName:
    Description: 'Name of the database (ignored when DBSnapshotIdentifier is set, value used from snapshot).'
    Type: String
    Default: ''

  DBBackupRetentionPeriod:
    Description: 'The number of days to keep snapshots of the database.'
    Type: Number
    MinValue: 0
    MaxValue: 35
    Default: 30

  DBMasterUsername:
    Description: 'The master user name for the DB instance (ignored when DBSnapshotIdentifier is set, value used from snapshot).'
    Type: String
    Default: master

  DBMasterUserPassword:
    Description: 'The master password for the DB instance (ignored when DBSnapshotIdentifier is set, value used from snapshot).'
    Type: String
    NoEcho: true
    Default: ''

  DBMultiAZ:
    Description: 'Specifies if the database instance is deployed to multiple Availability Zones for HA.'
    Type: String
    Default: true
    AllowedValues: [true, false]

  PreferredBackupWindow:
    Description: 'The daily time range in UTC during which you want to create automated backups.'
    Type: String
    Default: '09:54-10:24'

  PreferredMaintenanceWindow:
    Description: The weekly time range (in UTC) during which system maintenance can occur.
    Type: String
    Default: 'sat:07:00-sat:07:30'

  EngineVersion:
    Description: 'MySQL version.'
    Type: String
    Default: '5.7.21'
    AllowedValues: ['8.0.15', '5.7.25', '5.7.21', '5.6.41', '5.5.61'] # aws rds describe-db-engine-versions --engine mysql --query "DBEngineVersions[].EngineVersion"

# Conditions:
#   HasAlertTopic: !Not [!Equals [!Ref ParentAlertStack, '']]

######################
# Resources section
######################

Resources:

  # Security Group for DB

  DatabaseSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Ref 'AWS::StackName'
      VpcId: {'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'}
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupId: {'Fn::ImportValue': !Sub '${ParentClientStack}-ClientSecurityGroup'}

  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: !Ref 'AWS::StackName'
      SubnetIds: !Split [',', {
        'Fn::ImportValue': !Sub '${NetworkStackName}-PrivateSubnet1',
        'Fn::ImportValue': !Sub '${NetworkStackName}-PrivateSubnet2',
      }]

  # RDS Instance

  DBInstance:
    DeletionPolicy: Snapshot # default
    UpdateReplacePolicy: Snapshot
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: !Ref DBBackupRetentionPeriod
      CopyTagsToSnapshot: true
      DBInstanceClass: !Ref DBInstanceClass
      DBName: !Ref DBName
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: mysql
      EngineVersion: !Ref EngineVersion
      MasterUsername: !Ref DBMasterUsername
      MasterUserPassword: !Ref DBMasterUserPassword
      MultiAZ: !Ref DBMultiAZ
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      StorageType: gp2
      VPCSecurityGroups:
      - !Ref DatabaseSecurityGroup

  # # CloudWatch Alarm

  # DatabaseBurstBalanceTooLowAlarm:
  #   Condition: HasAlertTopic
  #   Type: 'AWS::CloudWatch::Alarm'
  #   Properties:
  #     AlarmActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     AlarmDescription: 'Average database storage burst balance over last 10 minutes too low, expect a significant performance drop soon.'
  #     ComparisonOperator: LessThanThreshold
  #     Dimensions:
  #     - Name: DBInstanceIdentifier
  #       Value: !Ref DBInstance
  #     EvaluationPeriods: 1
  #     MetricName: BurstBalance
  #     Namespace: 'AWS/RDS'
  #     OKActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     Period: 600
  #     Statistic: Average
  #     Threshold: 20

  # DatabaseCPUUtilizationTooHighAlarm:
  #   Condition: HasAlertTopic
  #   Type: 'AWS::CloudWatch::Alarm'
  #   Properties:
  #     AlarmActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     AlarmDescription: 'Average database CPU utilization over last 10 minutes too high.'
  #     ComparisonOperator: GreaterThanThreshold
  #     Dimensions:
  #     - Name: DBInstanceIdentifier
  #       Value: !Ref DBInstance
  #     EvaluationPeriods: 1
  #     MetricName: CPUUtilization
  #     Namespace: 'AWS/RDS'
  #     OKActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     Period: 600
  #     Statistic: Average
  #     Threshold: 80

  # DatabaseCPUCreditBalanceTooLowAlarm:
  #   Condition: HasAlertTopic
  #   Type: 'AWS::CloudWatch::Alarm'
  #   Properties:
  #     AlarmActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     AlarmDescription: 'Average database CPU credit balance over last 10 minutes too low, expect a significant performance drop soon.'
  #     ComparisonOperator: LessThanThreshold
  #     Dimensions:
  #     - Name: DBInstanceIdentifier
  #       Value: !Ref DBInstance
  #     EvaluationPeriods: 1
  #     MetricName: CPUCreditBalance
  #     Namespace: 'AWS/RDS'
  #     OKActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     Period: 600
  #     Statistic: Average
  #     Threshold: 20

  # DatabaseDiskQueueDepthTooHighAlarm:
  #   Condition: HasAlertTopic
  #   Type: 'AWS::CloudWatch::Alarm'
  #   Properties:
  #     AlarmActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     AlarmDescription: 'Average database disk queue depth over last 10 minutes too high, performance may suffer.'
  #     ComparisonOperator: GreaterThanThreshold
  #     Dimensions:
  #     - Name: DBInstanceIdentifier
  #       Value: !Ref DBInstance
  #     EvaluationPeriods: 1
  #     MetricName: DiskQueueDepth
  #     Namespace: 'AWS/RDS'
  #     OKActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     Period: 600
  #     Statistic: Average
  #     Threshold: 64

  # DatabaseFreeableMemoryTooLowAlarm:
  #   Condition: HasAlertTopic
  #   Type: 'AWS::CloudWatch::Alarm'
  #   Properties:
  #     AlarmActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     AlarmDescription: 'Average database freeable memory over last 10 minutes too low, performance may suffer.'
  #     ComparisonOperator: LessThanThreshold
  #     Dimensions:
  #     - Name: DBInstanceIdentifier
  #       Value: !Ref DBInstance
  #     EvaluationPeriods: 1
  #     MetricName: FreeableMemory
  #     Namespace: 'AWS/RDS'
  #     OKActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     Period: 600
  #     Statistic: Average
  #     Threshold: 64000000 # 64 Megabyte in Byte

  # DatabaseFreeStorageSpaceTooLowAlarm:
  #   Condition: HasAlertTopic
  #   Type: 'AWS::CloudWatch::Alarm'
  #   Properties:
  #     AlarmActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     AlarmDescription: 'Average database free storage space over last 10 minutes too low.'
  #     ComparisonOperator: LessThanThreshold
  #     Dimensions:
  #     - Name: DBInstanceIdentifier
  #       Value: !Ref DBInstance
  #     EvaluationPeriods: 1
  #     MetricName: FreeStorageSpace
  #     Namespace: 'AWS/RDS'
  #     OKActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     Period: 600
  #     Statistic: Average
  #     Threshold: 2000000000 # 2 Gigabyte in Byte

  # DatabaseSwapUsageTooHighAlarm:
  #   Condition: HasAlertTopic
  #   Type: 'AWS::CloudWatch::Alarm'
  #   Properties:
  #     AlarmActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     AlarmDescription: 'Average database swap usage over last 10 minutes too high, performance may suffer.'
  #     ComparisonOperator: GreaterThanThreshold
  #     Dimensions:
  #     - Name: DBInstanceIdentifier
  #       Value: !Ref DBInstance
  #     EvaluationPeriods: 1
  #     MetricName: SwapUsage
  #     Namespace: 'AWS/RDS'
  #     OKActions:
  #     - {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     Period: 600
  #     Statistic: Average
  #     Threshold: 256000000 # 256 Megabyte in Byte

  # DatabaseEventSubscription:
  #   Condition: HasAlertTopic
  #   Type: 'AWS::RDS::EventSubscription'
  #   Properties:
  #     EventCategories:
  #     - failover
  #     - failure
  #     - 'low storage'
  #     - maintenance
  #     - notification
  #     - recovery
  #     SnsTopicArn: {'Fn::ImportValue': !Sub '${ParentAlertStack}-TopicARN'}
  #     SourceIds: [!Ref DBInstance]
  #     SourceType: 'db-instance'

######################
# Outputs section
######################

Outputs:

  InstanceName:
    Description: 'The name of the database instance.'
    Value: !Ref DBInstance
    Export:
      Name: !Sub '${AWS::StackName}-RDSInstanceName'

  DNSName:
    Description: 'The connection endpoint for the database.'
    Value: !GetAtt 'DBInstance.Endpoint.Address'
    Export:
      Name: !Sub '${AWS::StackName}-RDSEndpoint'

